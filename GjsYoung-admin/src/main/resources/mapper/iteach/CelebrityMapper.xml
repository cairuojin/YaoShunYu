<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjsyoung.admin.mapper.iteach.CelebrityMapper">
  <resultMap id="BaseResultMap" type="com.gjsyoung.admin.domain.iteach.Celebrity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="Dynasty" jdbcType="INTEGER" property="dynasty" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
    <result column="Birthanddeath" jdbcType="VARCHAR" property="birthanddeath" />
    <result column="assess" jdbcType="VARCHAR" property="assess" />
    <result column="homeplace" jdbcType="VARCHAR" property="homeplace" />
    <result column="bigimage" jdbcType="VARCHAR" property="bigimage" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gjsyoung.admin.domain.iteach.Celebrity">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, image, introduction, Dynasty, alias, evaluate, Birthanddeath, assess, homeplace, 
    bigimage
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from celebrity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from celebrity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gjsyoung.admin.domain.iteach.Celebrity">
    insert into celebrity (id, name, image, 
      introduction, Dynasty, alias, 
      evaluate, Birthanddeath, assess, 
      homeplace, bigimage, content
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{dynasty,jdbcType=INTEGER}, #{alias,jdbcType=VARCHAR}, 
      #{evaluate,jdbcType=VARCHAR}, #{birthanddeath,jdbcType=VARCHAR}, #{assess,jdbcType=VARCHAR}, 
      #{homeplace,jdbcType=VARCHAR}, #{bigimage,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gjsyoung.admin.domain.iteach.Celebrity">
    insert into celebrity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="dynasty != null">
        Dynasty,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="birthanddeath != null">
        Birthanddeath,
      </if>
      <if test="assess != null">
        assess,
      </if>
      <if test="homeplace != null">
        homeplace,
      </if>
      <if test="bigimage != null">
        bigimage,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="dynasty != null">
        #{dynasty,jdbcType=INTEGER},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="birthanddeath != null">
        #{birthanddeath,jdbcType=VARCHAR},
      </if>
      <if test="assess != null">
        #{assess,jdbcType=VARCHAR},
      </if>
      <if test="homeplace != null">
        #{homeplace,jdbcType=VARCHAR},
      </if>
      <if test="bigimage != null">
        #{bigimage,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gjsyoung.admin.domain.iteach.Celebrity">
    update celebrity
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="dynasty != null">
        Dynasty = #{dynasty,jdbcType=INTEGER},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="birthanddeath != null">
        Birthanddeath = #{birthanddeath,jdbcType=VARCHAR},
      </if>
      <if test="assess != null">
        assess = #{assess,jdbcType=VARCHAR},
      </if>
      <if test="homeplace != null">
        homeplace = #{homeplace,jdbcType=VARCHAR},
      </if>
      <if test="bigimage != null">
        bigimage = #{bigimage,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gjsyoung.admin.domain.iteach.Celebrity">
    update celebrity
    set name = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      Dynasty = #{dynasty,jdbcType=INTEGER},
      alias = #{alias,jdbcType=VARCHAR},
      evaluate = #{evaluate,jdbcType=VARCHAR},
      Birthanddeath = #{birthanddeath,jdbcType=VARCHAR},
      assess = #{assess,jdbcType=VARCHAR},
      homeplace = #{homeplace,jdbcType=VARCHAR},
      bigimage = #{bigimage,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gjsyoung.admin.domain.iteach.Celebrity">
    update celebrity
    set name = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      Dynasty = #{dynasty,jdbcType=INTEGER},
      alias = #{alias,jdbcType=VARCHAR},
      evaluate = #{evaluate,jdbcType=VARCHAR},
      Birthanddeath = #{birthanddeath,jdbcType=VARCHAR},
      assess = #{assess,jdbcType=VARCHAR},
      homeplace = #{homeplace,jdbcType=VARCHAR},
      bigimage = #{bigimage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from celebrity
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from celebrity
    WHERE name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="selectByNameLike" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from celebrity
    WHERE name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
  </select>

  <select id="selectByDynasty" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from celebrity
    WHERE Dynasty = #{dynasty,jdbcType=INTEGER}
  </select>
  
  <select id="countAll" resultType="java.lang.Integer">
    select count(id) FROM celebrity
  </select>
</mapper>