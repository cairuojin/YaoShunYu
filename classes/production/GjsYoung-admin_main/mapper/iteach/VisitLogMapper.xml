<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjsyoung.admin.mapper.iteach.VisitLogMapper">
  <resultMap id="BaseResultMap" type="com.gjsyoung.admin.domain.iteach.VisitLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="VARCHAR" property="sid" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="visitTime" jdbcType="TIMESTAMP" property="visittime" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="county" jdbcType="VARCHAR" property="county" />
    <result column="isp" jdbcType="VARCHAR" property="isp" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="errMessage" jdbcType="VARCHAR" property="errmessage" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sid, ip, visitTime, country, area, region, city, county, isp, status, errMessage
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from visitlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from visitlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gjsyoung.admin.domain.iteach.VisitLog">
    insert into visitlog (id, sid, ip, 
      visitTime, country, area, 
      region, city, county, 
      isp, status, errMessage
      )
    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{visittime,jdbcType=TIMESTAMP}, #{country,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{county,jdbcType=VARCHAR}, 
      #{isp,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{errmessage,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gjsyoung.admin.domain.iteach.VisitLog">
    insert into visitlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="visittime != null">
        visitTime,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="isp != null">
        isp,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="errmessage != null">
        errMessage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="visittime != null">
        #{visittime,jdbcType=TIMESTAMP},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="isp != null">
        #{isp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="errmessage != null">
        #{errmessage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gjsyoung.admin.domain.iteach.VisitLog">
    update visitlog
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="visittime != null">
        visitTime = #{visittime,jdbcType=TIMESTAMP},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="isp != null">
        isp = #{isp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="errmessage != null">
        errMessage = #{errmessage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gjsyoung.admin.domain.iteach.VisitLog">
    update visitlog
    set sid = #{sid,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      visitTime = #{visittime,jdbcType=TIMESTAMP},
      country = #{country,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      isp = #{isp,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      errMessage = #{errmessage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectBySid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from visitlog
    where sid = #{sid,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select * FROM visitlog order by visitTime desc
  </select>

  <select id="countAll" resultType="java.lang.Integer">
    select count(id) FROM visitlog
  </select>

  <select id="countByDay"  parameterType="java.util.Date"  resultType="java.lang.Integer">
    SELECT count(id) FROM visitlog
    WHERE
    <![CDATA[ TO_DAYS(visitTime) = TO_DAYS( #{date, jdbcType=TIMESTAMP} )]]>
  </select>

  <select id="countThisWeek" resultType="java.lang.Integer">
    SELECT count(id) FROM visitlog where DATE_SUB(CURDATE(),INTERVAL 7 DAY) &lt;= date(visitTime);
  </select>

  <select id="countThisMonth" resultType="java.lang.Integer">
    SELECT count(id) FROM visitlog where DATE_SUB(CURDATE(),INTERVAL 30 DAY) &lt;= date(visitTime);
  </select>

  <select id="countHourByDay"  parameterType="java.util.Date"  resultType="java.util.Map">
    SELECT HOUR(visitTime) as hour , count(id) as count FROM visitlog
    WHERE TO_DAYS(visitTime) = TO_DAYS(#{date,jdbcType=TIMESTAMP})  /* 根据日期查该日 hour  count */
    group by hour(visitTime);
  </select>
  <select id="countHourByDaySelect"  parameterType="java.util.Map"  resultType="java.util.Map">
    SELECT HOUR(visitTime) as hour , count(id) as count FROM visitlog
    WHERE TO_DAYS(visitTime) = TO_DAYS(#{date,jdbcType=TIMESTAMP})  /* 根据日期查该日 hour  count */
    <if test="country != null">
      and country=#{country}
    </if>
    group by hour(visitTime);
  </select>
  <select id="countHourByDayNotSelect"  parameterType="java.util.Map"  resultType="java.util.Map">
    SELECT HOUR(visitTime) as hour , count(id) as count FROM visitlog
    WHERE TO_DAYS(visitTime) = TO_DAYS(#{date,jdbcType=TIMESTAMP})  /* 根据日期查该日 hour  count */
    <if test="country != null">
      and country!=#{country}
    </if>
    group by hour(visitTime);
  </select>




  <select id="avgHourLastbyDay" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT HOUR(visitTime) as hour, round(count(id) / #{day,jdbcType=INTEGER} ) as count FROM visitlog
    WHERE DATE_SUB(CURDATE(),INTERVAL #{day,jdbcType=INTEGER} DAY) &lt;= date(visitTime)    /* 近多少天的  hour  count */
    group by hour(visitTime) order by HOUR(visitTime)
  </select>

  <select id="countDaybyMonth" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT DATE_FORMAT( visitTime, "%d" ) as day  , COUNT( * ) as count
	FROM gjsyoung.visitlog
	WHERE date_format(visitTime, '%Y %m') = date_format(DATE_SUB(curdate(), INTERVAL #{month,jdbcType=INTEGER} MONTH),'%Y %m') /* 格式化本月 = visittime - 1月 */
    group BY DATE_FORMAT( visitTime, "%d" );
  </select>

  <select id="countAllGroupByTemptime" resultType="java.util.Map">
    select
		count(id) as count,case
			HOUR(visitTime)
			 when 0 then '午夜0-4时'
			  when 1 then '午夜0-4时'
               when 2 then '午夜0-4时'
                when 3 then '午夜0-4时'
			  when 4 then '清晨4-8时'
               when 5 then '清晨4-8时'
                when 6 then '清晨4-8时'
			  when 7 then '清晨4-8时'
               when 8 then '早上8-12时'
                when 9 then '早上8-12时'
			  when 10 then '早上8-12时'
               when 11 then '早上8-12时'
                when 12 then '下午12-16时'
			  when 13 then '下午12-16时'
               when 14 then '下午12-16时'
                when 15 then '下午12-16时'
			  when 16 then '傍晚16-20时'
               when 17 then '傍晚16-20时'
                when 18 then '傍晚16-20时'
			  when 19 then '傍晚16-20时'
               when 20 then '晚上20-24时'
                when 21 then '晚上20-24时'
			  when 22 then '晚上20-24时'
              when 23 then '晚上20-24时'
        else 0
        end as temptime
        from visitlog group by temptime;
  </select>

  <select id="countALLChinaGroupByRegion" resultType="java.util.Map">
    select region,count(id) as count from visitlog where country = '中国' group by region order by count desc;
  </select>
  <select id="countALLNotChina" resultType="java.util.Map">
    select "海外" as region,count(id) as count from visitlog where country != '中国';
  </select>

  <select id="selectRunningDay" resultType="java.lang.Integer">
    select to_days(max(visitTime))  - to_days(min(visitTime))  from visitlog ;
  </select>

</mapper>